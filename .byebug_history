continue
blockers
continue
@email
continue
@email
continue
@email
continue
@email
continue
@email
continue
@email
continue
continu
continue
email
continue
@session_users
continue
blockers
continue
blockers
continue
blockers.first.blocker
blockers
blockers.blocker
b
user.blockers.last.blocker
user.blockers.last
user.blockers.first.blocker
user.blockers.first
user.blockers
blockers
continue
blockers
continue
blockers
continue
blockers
latest_session.id
continue
@session_users
user.email
user
continue
mail(to: user, subject: 'testing methods are connected').deliver
continue
mail(to: user, subject: 'testing methods are connected').deliver
mail(to: user, subject: 'testing methods are connected').deliver_now
continue
user
continue
user
continue
@session_user_ids.each do |u|
@session_user_ids
WeeklyUpdate.send_recap
continue
@session_emails
continue
@session_emails
continue
@latest_session.users.each do |u|
@latest_session.users
@latest_session
continue
@user
continue
@user
continue
@user
continue
@user_email
continue
@user_email
continue
@user_email
continue
mail(to: @user.email, subject: 'Sample Email').deliver
mail(to: @user.email, subject: 'Sample Email').deliver_now
mail(to: @user.email, subject: 'Sample Email')
@user.email
@user
continue
message_id
continue
ApplicationMailer.methods
WeeklyUpdate.methods
session_emails
sessions_emails
email
continue
@session_emails
WeeklyUpdate.send_recap(@session_emails)
continue
@session_emails
continue
@session_users
@session_emails
exit
@weeks_blockers
continue
@weeks_blockers
continue
@weeks_blockers
continue
@session_emails
@session_email
@session.users.last.email
@session.users.last
@session.users.each do |user|
@session.users
@session
continue
@session
continue
WeeklyUpdate.send_recap(@session)
@session
continue
@session
continue
@session
continue
@session
continue
@dow
continue
@dow
continue
@dow
continue
@dow
Time.now.strftime("%I%M")
Time.now
@dow
continue
@user
email_settings
continue
email_settings
continue
mail
subject
@user.email
@user
continue
WeeklyUpdate
@user.email
@user
continue
@user
continue
user
@user
continue
user
@user
continue
@session
continue
@session
continue
@session
continue
@session
continue
session.find(session_id: @session)
@session
continue
@session
continue
@wip.session_id
@wip
continue
@wip.session_id
@wip
continue
@wip
@session
continue
@session
continue
@wip
continue
@session
continue
@completed
continue
@user
continue
User.reset_pk_sequence
@user
continue
@user
continue
@user
continue
user.wips
user
continue
user.wips = Wip.create
user
continue
user
@users
continue
User.find(5)
User.find_by(5)
User.find_by(id)
id
ids
@attendees
continue
ids
continue
User.find(5)
Session.get_users([5, 6])
Session.get_users[5, 6]
params[:user_ids]S
params
continue
@attendees
continue
@session
params[:user_ids].map{|i| i.to_i}
params[:user_ids]
params
continue
User.first
User.find(1)
User.find(13)
User.find_by(13)
User.find_by(1)
ids
@attendees
continue
@session.users.find
@session
@session.users
@session
continue
@session
@users
continue
@attendees
continue
continuye
@users
@session.users
@session
continue
@sessionz.blockers
@sessionz
@session.blockers
