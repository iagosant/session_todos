c

@user = User.find_by(email:params[:email])
c
user.activation_token
c
@user.activation_token
 @user = user
user.activation_token
user
c
exit
@user.activation_token
@user
UserMailer.password_reset(@user).deliver_now
exit
c
param
params
mail to: @user.email, subject: "Account activation"
 @user = user
 @user = use
c
exit
mail to: @user.email, subject: "Account activation"
  @user = user
user
c
exit
 @user.send_activation_email
exit
 @user.send_activation_email
@user
c
exit
 UserMailer.password_reset(@user).deliver_now
@user= User.find(13)
 UserMailer.password_reset(@user).deliver_now
@user = User.find_by(email:params[:email])
c
 mail to: @user.email, subject: "Account activation"
 @user = user
c
mail to: @user.email, subject: "Account activation"
@user
@user = user
user
c
mail to: @user.email, subject: "Account activation"
@user = user
c
mail to: @user.email, subject: "Account activation"
 @user = user
c
mail to: @user.email, subject: "Account activation"
@user = user
c
mail to: @user.email, subject: "Account activation"
 @user = user
c
user
 mail to: user.email, subject: "Account activation"
c
UserMailer.account_activation(@user).deliver_now
@user
c
exit
mail to: user.email, subject: "Account activation"
@user = user
user.email
user
c
 UserMailer.account_activation(@user).deliver_now
c
UserMailer.account_activation(user).deliver_now
c
exit
UserMailer.account_activation(user).deliver_now
user = User.find(params[:user])
User.find(params[:user])
user
c
params[:user]
c
resend_activation_path(:user => @user )
exit
UserMailer.account_activation(current_user.id).deliver_now
 UserMailer.account_activation(current_user).deliver_now
current_user
c
view_context.link_to("here", resend_activation(@user))
view_context.link_to("here", resend_activation_path(@user))
 %Q[ A customer already exists with with this shopping id. Edit this customer #{view_context.link_to("here", resend_activation_path(@user))}.]
c
new_password_reset_url
c
flash.now[:danger] = "Your account is not activated, click here to re-send #{ view_context.link_to("activation", resend_activation_path(@user)) }.".html_safe
c
flash.now[:danger] = "Your account is not activated,#{ view_context.link_to("click here to re-send activation", resend_activation_path(@user)) }.".html_safe
c
flash.now[:danger] = "Your account is not activated,#{ view_context.link_to("click here to re-send activation", resend_activation_path) }.".html_safe
c
account_activation
@user.account_activation
@user
flash.now[:danger] = "Your account is not activated, #{view_context.link_to('activate your account first', @user.account_activation(email: @user.email))}."
flash.now[:danger] = "Your account is not activated, #{view_context.link_to('activate your account first', account_activation(email: @user.email))}."
c
 flash.now[:danger] = "Your account is not activated, #{view_context.link_to('activate your account first', edit_account_activation_url(@user.activation_token,email: @user.email))}."

exit
@team

new_users.count
new_users

c
users
ui
c
users
ui
user_ids
c
new_user_array
c
user_ids
users
ui
c
User.find(80)
User.find(62)
c
new_user_array
c
users
c
users << User.find(ui)
c
user_ids
c
@users
c
new_user_array
c
new_user_array = users - user_to_array
user_to_array = params[:userId].split(",").map(&:to_i)
users = removeUserIdFinder(session.users)
remove_user = User.find(params[:userId])
session = Session.find(params[:sessionId])
c
session.users
session
session.update(users: new_user_array)
session
new_user_array
exit
new_user_array
session.update(users: new_user_array)
users - user_to_array
user_to_array
users
exit
users
user_to_array - users
user_to_array = params[:userId].split(",").map(&:to_i)
params[:userId].split(",").map(&:to_i)
params[:userId]
removeUserIdFinder(session.users)
remove_user = User.find(params[:userId])
session = Session.find(params[:sessionId])
exit
users = removeUserIdFinder(session.users)
remove_user = User.find(params[:userId])
session = Session.find(params[:sessionId])
exit
removeUserIdFinder(session.users)
searchByUser(session.users)
Session.get_users(params[:userId].map{|i| i.to_i})
Session.get_users(session.users.map{|i| i.to_i})
Session.get_users(session.users)
new_user_array = users - remove_user
users = session.users
remove_user = User.find(params[:userId])
session = Session.find(params[:sessionId])
c
params
session = Session.find(params[:session_id])
params[:session_id]
params
c
session[:current_sessionc]
session[:current_session_id]
c
session[:current_session_id]
exit
session[:current_session_id]
Session.find_by(session[:current_session_id])
session = Session.find(session[:current_session_id])
session[:current_session_id]
session[:current_session]
c
current_session
@session
@users
c
params
c
params
c
exit
c
@sessions_result
c
@sessions_result
c
@sessions_result
c
@sessions_result.count
@sessions_result
c
@sessions_result
c
sessions_result
c
@sessions_result
c
@sessions_result
c
@sessions_result
sn.users.include?(u) && !@sessions_result.include?(sn)
sn.users
sn
csn.users.include?(u) && !@sessions_result.include?(sn)
c
@sessions_result
c
sn.users
sn
sn.users.include?(u) && !@sessions_result.include?(sn)
c
@sessions_result
c
sn.users
sn
sn.users.include?(u) && !@sessions_result.include?(sn)
@sessions_result
c
sn.users
u
@sessions_result
sn
sn.users.include?(u) && !@sessions_result.include?(sn)
@sessions_result
c
@sessions_result
sn.users.include?(u) && !@sessions_result.include?(sn)
c
sn
sn.users.include?(u) && !@sessions_result.include?(sn)
@sessions_result
c
sn.users.include?(u) && !@sessions_result.include?(sn)
c
@sessions_result
u
sn.users
sn
sn.users.include?(u) && !@sessions_result.include?(sn)
c
sn.users.include?(u) && !@sessions_result.include?(sn)
c
sn.users.include?(u) && !@sessions_result.include?(sn)
c
@sessions_result
c
@sessions_result.count
@sessions_result
c
@sessions_result
c
@sessions_result
@sessions_result.uniq!
@sessions_result
c
@sessions_result.uniq!.count
@sessions_result.uniq!
c
@sessions_result
c
@sessions_result.uniq.count
@sessions_result.uniq
c
Session.find(20).users
Session.find(19).users
Session.find(17).users
Session.find(16).users
@sessions_result
c
found_sessions
users_found
c
@sessions_result
@sessions_result.count
c
@sessions_result.count
@sessions_result
c
Session.find(18).users
c
found_sessions
users_found
sn
c
@sessions_result
c
@sessions_result
u
c
Session.find(15).users
Session.find(15)
sn
c
@sessions_result
u
c
u
c
@sessions_result
u
c
sn
c
@sessions_result
c
u.lenght
u.count
u
c
u
c
@sessions_result
u
c
@sessions_result
c
Session.find(16).users
@sessions_result
@sessions_results
c
@sessions_results
Session.find(16).users
Session.find(16)
sn
c
@sessions_result
c
Session.find(18).users
sn
c
Session.find(19).users
sn
c
Session.find(20).users
sn
c
u
sn
@sessions_result
