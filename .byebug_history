c
continue
@user
exit
continue
UserMailer.password_reset(self)
continue
exit
@user.send_password_reset_email
 @user.create_reset_digest
@user = User.find_by(email: params[:password_reset][:email].downcase)
exit
@user.create_reset_digest
  @user = User.find_by(email: params[:password_reset][:email].downcase)
exit
@user.create_reset_digest
@user = User.find_by(email: params[:password_reset][:email].downcase)
exit
self.reset_token = User.new_token
@user.create_reset_digest
@user = User.find_by(email: params[:password_reset][:email].downcase)
exit
@user.create_reset_digest
 @user = User.find_by(email: params[:password_reset][:email].downcase)
continue
@user = User.find_by(email: params[:password_reset][:email].downcase)
continue
exit
user = User.find_by(email: params[:email])
continue
@user
continue
@user.save
@user
user_info
exit
@user.save
@user
exit
user_params
exit
params
continue
@user
@user.save
@user
exit
@user
@user.save
@user.password = temp_password
@user.save
@user
@user.password_digest = temp_password
exit
@ex
exit
@user
params
continue
params
temp_password
continue
@user
continue
exit
params[:password_confirmation] = @temp_password
 temp_password = SecureRandom.hex(8)
params = user_params
user_params
continue
@user
continue
@user
continue
@user
continue
@user
continue
user
exit
params[:password_confirmation] = "5"
params[:password] = "5"
params[:password][:password_confirmation] = "5"
params
 params = user_params
user_params
exit
@user
@user.save
@user = @team.users.build(a)
a[:password] = "5"
a[:password_confirmation] = "5"
a
@user = @team.users.build(a)
a
a[:password_confirmation] = 5
a
a[:password] = 5
a[:password]
a
a = user_params
c
c= user_params
c= user
user_params
user_params[:password]
user_params[:password] = 5
user_params[:password]
user_params
@user
exit
user_params
@user
continue
@user
exit
@user
exit
user_params
@user
exit
@user
exit
@user
@user.save
 @temp_password = SecureRandom.hex(8)
@user = @team.users.build(user_params)
@team
user_params
@user
continue
@user
exit
@user
continue
exit
@user
continue
@user
@user.password = SecureRandom.hex(8)
User.SecureRandom.hex(8)
SecureRandom.hex(8)
     @user.password = User.random_string(10)
continue
@user
continue
@logged_user.role == "master" || @logged_user.role == "manager" || @logged_user.role == "admin"
exit
@logged_user.role
@logged_user
@logged_user.role == "master" || @logged_user.role == "manager"
exit
@logged_user
user
@logged_user.role
 @logged_user.role == "master" || @logged_user.role == "manager"
continue
exit
user_params
@temp_pass
continue
exit
continue
@logged_user.role == "master" || @logged_user.role == "manager"
continue
exit
continue
 @logged_user.role == "master" || "manager"
@logged_user.role
@logged_user
continue
session[:user_id]
exit
current
model
exit
session
model
:model
model
current
exit
current_user
model
current
continue
user
continue
@logged_user.role
@logged_user
continue
model
current
continue
user
exit
user
exit
@user = User.find(session[:user_id])
continue
@user
exit
@user
@user.update(role: 0)
@user
@user.save
@user = @team.users.build(u_params)
u_params = (team_params[:users_attributes]["0"])
team_params
continue
@users
exit
@team.users.all
@team.users
@team
@users
continue
@team.sessions.last(5)
@team.sessions
@teams_sessions = @team.sessions
@team
continue
@session
continue
 @users = Session.get_users(params[:user_ids].map{|i| i.to_i})
@team.id
@team
continue
@team.id
@team
@tewam
continue
@team
exit
Team.find(session[:team_id])
session[:team_id]
session
@user
@team
continue
@user.team
@user
user
exit
@team.team_name
@team
continue
session[:team_id] = user.team_id
user.team_id
user
session[:team_id]
session[:user_id]
session
continue
session[:user_id]
session
